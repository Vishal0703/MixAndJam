name: GameCI Template üéÆ

# on: workflow_dispatch
on: push

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  GAME_NAME: Farreign
  ITCH_USERNAME: luffy703
  ITCH_GAME_ID: farreign

jobs:
  # testRunner:
    # name: Test in ${{ matrix.testMode }} ‚ú®
    # runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     testMode:
    #       - EditMode
    #       - PlayMode
    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v2

    #   # - name: Create LFS file list
    #   #   run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

    #   # - name: Restore LFS cache
    #   #   uses: actions/cache@v2
    #   #   id: lfs-cache
    #   #   with:
    #   #     path: .git/lfs
    #   #     key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

    #   # - name: Git LFS Pull
    #   #   run: |
    #   #     git lfs pull
    #   #     git add .
    #   #     git reset --hard
    #   - name: Restore Library cache
    #     uses: actions/cache@v2
    #     with:
    #       path: Library
    #       key: Library-tests
    #       restore-keys: |
    #         Library-

    #   - uses: game-ci/unity-test-runner@v2
    #     id: testRunner
    #     with:
    #       testMode: ${{ matrix.testMode }}
    #       checkName: ${{ matrix.testMode }} test results
    #       githubToken: ${{ secrets.GITHUB_TOKEN }}

    #   - uses: actions/upload-artifact@v2
    #     with:
    #       name: Test results (${{ matrix.testMode }})
    #       path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildWebGL:
    # needs: testRunner
    name: Build for WebGL üñ•Ô∏è
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        # If needed use LFS from above example

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-WebGL
          restore-keys: |
            Library-build-
            Library-
      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: WebGL
          buildName: ${{ env.GAME_NAME }}

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.GAME_NAME }}-WebGL
          path: build/WebGL

  buildWindows:
    # needs: testRunner
    name: Build for Windows üñ•Ô∏è
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-StandaloneWindows64
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: StandaloneWindows64
          buildName: ${{ env.GAME_NAME }}

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.GAME_NAME }}-StandaloneWindows64
          path: build/StandaloneWindows64

  deployWebGL:
    needs: buildWebGL
    name: Deploy WebGL build to Github Pages and itch.io üöÄ
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.GAME_NAME }}-WebGL
          path: build

      - name: Deploy to Github pagesüöÄ
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build

      - name: Deploy to Itch.io
        uses: KikimoraGames/itch-publish@v0.0.3
        with:
          butlerApiKey: ${{secrets.BUTLER_API_KEY}}
          gameData: ./build
          itchUsername: ${{env.ITCH_USERNAME}}
          itchGameId: ${{ env.ITCH_GAME_ID }}
          buildChannel: webgl
          buildNumber: ${{ needs.version.outputs.version_hash }}

  deployWindows:
    needs: buildWindows
    name: Deploy Windows build to Github Pages and itch.io üöÄ
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.GAME_NAME }}-StandaloneWindows64
          path: build/StandaloneWindows64

      - name: Deploy to Itch.io
        uses: KikimoraGames/itch-publish@v0.0.3
        with:
          butlerApiKey: ${{secrets.BUTLER_API_KEY}}
          gameData: ./build
          itchUsername: ${{env.ITCH_USERNAME}}
          itchGameId: ${{ env.ITCH_GAME_ID }}
          buildChannel: windows
          buildNumber: ${{ needs.version.outputs.version_hash }}